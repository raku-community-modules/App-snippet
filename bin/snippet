#!/usr/bin/env raku

use Pluggable;
use Getopt::Advance;
use App::snippet;

my (@compilers, @interfaces);

for plugins("App::snippet", :plugins-namespace<Compiler>) -> $plugin {
    @compilers.push($plugin);
}

for plugins("App::snippet", :plugins-namespace<Interface>) -> $plugin {
    @interfaces.push($plugin.new(
        compilers => @compilers.grep( { $plugin.lang (elem) .supports()>>.lang }),
    ));
}

my $ret = getopt(|(@interfaces>>.optionset), :autohv, :!strict);
my %ret = $ret.return-value;

for %ret.values -> $target {
    if $target.?hasTarget {
        given $target.action() {
            when TargetAction::RUN {
                $target.run();
            }
            when TargetAction::SAY {
                $target.say();
            }
            default {
                fail "Don't know how to do with {$target}";
            }
        }
        $target.clean();
    }
}
